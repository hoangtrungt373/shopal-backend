--create database shopal
--go
--use shopal
--go

-- for authentication and authorization
drop table if exists auth.USER_ACCOUNT_TOKEN;
drop table if exists auth.USER_ACCOUNT;

-- for mangagement exchange point to product process
drop table if exists shop.PRODUCT_CART;
drop table if exists shop.PRODUCT_CATALOG;
drop table if exists shop.COOPERATION_CONTRACT;
drop table if exists shop.PURCHASE_ORDER_DETAIL;
drop table if exists shop.ACCOUNTING;
drop table if exists shop.PRODUCT_POINT;
drop table if exists shop.PURCHASE_ORDER;
drop table if exists shop.MEMBERSHIP;
drop table if exists shop.PRODUCT_IMAGE;
drop table if exists shop.PRODUCT;
drop table if exists shop.ENTERPRISE;
drop table if exists shop.CUSTOMER;
drop table if exists shop.CATALOG;

-- for save raw customer data from enterprise (not in system yet)
drop table if exists staging.STAG_CUSTOMER;

-- for save notification
drop table if exists notification.ENTERPRISE_COOPERATION_REQUEST;

drop schema if exists auth;
drop schema if exists shop;
drop schema if exists staging;
drop schema if exists notification;
-----------------------------------------------

go
create schema auth;
go
create schema shop;
go
create schema config;
go
create schema staging;
go
create schema notification;
go

CREATE TABLE auth.USER_ACCOUNT
(
    USER_ACCOUNT_ID INT          NOT NULL IDENTITY,
    USERNAME        VARCHAR(255),
    EMAIL           VARCHAR(255) NOT NULL,
    PASSWORD        VARCHAR(255) NOT NULL,
    ROLE            VARCHAR(20)  NOT NULL,

    CONSTRAINT PK_USER_ACCOUNT PRIMARY KEY (USER_ACCOUNT_ID)
)

CREATE TABLE auth.USER_ACCOUNT_TOKEN
(
    USER_ACCOUNT_TOKEN_ID INT          NOT NULL IDENTITY,
    USER_ACCOUNT_ID       INT          NOT NULL,
    TOKEN                 VARCHAR(255) NOT NULL,
    TYPE                  VARCHAR(20)  NOT NULL,
    REVOKED               BIT          NOT NULL,
    EXPIRED               BIT          NOT NULL,

    CONSTRAINT PK_USER_ACCOUNT_TOKEN PRIMARY KEY (USER_ACCOUNT_TOKEN_ID),

    CONSTRAINT FK_USER_ACCOUNT_TOKEN_USER_ACCOUNT FOREIGN KEY (USER_ACCOUNT_ID)
        REFERENCES auth.USER_ACCOUNT (USER_ACCOUNT_ID)
)

CREATE TABLE shop.CUSTOMER
(
    CUSTOMER_ID     INT          NOT NULL IDENTITY,
    USER_ACCOUNT_ID INT          NOT NULL,
    CONTACT_EMAIL   VARCHAR(50),
    FULL_NAME       NVARCHAR(50),
    PHONE_NUMBER    VARCHAR(12),
    GENDER          VARCHAR(10),
    BIRTHDATE       DATE,
    AVATAR_URL      VARCHAR(255),
    ADDRESS         NVARCHAR(255),

    USR_LOG_I       VARCHAR(128) NOT NULL,
    USR_LOG_U       VARCHAR(128) NOT NULL,
    DATE_LOG_I      DATETIME2    NOT NULL,
    DATE_LOG_U      DATETIME2    NOT NULL,
    VERSION         INT          NOT NULL,

    CONSTRAINT PK_CUSTOMER PRIMARY KEY (CUSTOMER_ID)
);

CREATE TABLE shop.ENTERPRISE
(
    ENTERPRISE_ID   INT          NOT NULL IDENTITY,
    USER_ACCOUNT_ID INT          NOT NULL,
    ENTERPRISE_NAME NVARCHAR(50) NOT NULL,
    PHONE_NUMBER    VARCHAR(12)  NOT NULL,
    ADRESS          NVARCHAR(255) NOT NULL,
    WEBSITE_URL     VARCHAR(255) NOT NULL,
    LOGO_URL        VARCHAR(255) NOT NULL,

    USR_LOG_I       VARCHAR(128) NOT NULL,
    USR_LOG_U       VARCHAR(128) NOT NULL,
    DATE_LOG_I      DATETIME2    NOT NULL,
    DATE_LOG_U      DATETIME2    NOT NULL,
    VERSION         INT          NOT NULL,

    CONSTRAINT PK_ENTERPRISE PRIMARY KEY (ENTERPRISE_ID)
)

CREATE TABLE shop.MEMBERSHIP
(
    MEMBERSHIP_ID         INT            NOT NULL IDENTITY,
    CUSTOMER_ID           INT            NOT NULL,
    ENTERPRISE_ID         INT            NOT NULL,
    REGISTER_EMAIL        VARCHAR(255)   NOT NULL,
    REGISTER_PHONE_NUMBER VARCHAR(255)   NOT NULL,
    AVAILABLE_POINT       DECIMAL(17, 2) NOT NULL,

    USR_LOG_I             VARCHAR(128)   NOT NULL,
    USR_LOG_U             VARCHAR(128)   NOT NULL,
    DATE_LOG_I            DATETIME2      NOT NULL,
    DATE_LOG_U            DATETIME2      NOT NULL,
    VERSION               INT            NOT NULL,

    CONSTRAINT PK_MEMBERSHIP PRIMARY KEY (MEMBERSHIP_ID),

    CONSTRAINT FK_MEMBERSHIP_CUSTOMER
        FOREIGN KEY (CUSTOMER_ID) REFERENCES shop.CUSTOMER (CUSTOMER_ID),

    CONSTRAINT FK_MEMBERSHIP_ENTERPRISE
        FOREIGN KEY (ENTERPRISE_ID) REFERENCES shop.ENTERPRISE (ENTERPRISE_ID)
);

CREATE TABLE shop.CATALOG
(
    CATALOG_ID        INT          NOT NULL IDENTITY,
    CATALOG_NAME      NVARCHAR(255) NOT NULL,
    LOGO_URL          VARCHAR(255),
    LEVEL             INT          NOT NULL,
    PARENT_CATALOG_ID INT,
    CATALOG_STATUS    VARCHAR(20)  NOT NULL,

    USR_LOG_I         VARCHAR(128) NOT NULL,
    USR_LOG_U         VARCHAR(128) NOT NULL,
    DATE_LOG_I        DATETIME2    NOT NULL,
    DATE_LOG_U        DATETIME2    NOT NULL,
    VERSION           INT          NOT NULL,

    CONSTRAINT PK_CATALOG PRIMARY KEY (CATALOG_ID),

    CONSTRAINT FK_CATALOG_PARENT_CATALOG_ID
        FOREIGN KEY (PARENT_CATALOG_ID) REFERENCES shop.CATALOG (CATALOG_ID)
);

CREATE TABLE shop.PRODUCT
(
    PRODUCT_ID              INT NOT NULL IDENTITY,
    SKU                     VARCHAR(50),
    PRODUCT_NAME            NVARCHAR(255) NOT NULL,
    QUANTITY_IN_STOCK       INT NOT NULL,
    DESCRIPTION_CONTENT_URL VARCHAR(MAX
) ,
	PRODUCT_STATUS				VARCHAR(20)		NOT NULL,
	RATING						DECIMAL(17,2)	NOT NULL,
	INPUT_DATE					DATE			NOT NULL,
	EXPIRATION_DATE				DATE			NOT NULL,
	INITIAL_CASH				DECIMAL(17,2)	NOT NULL,
	AMOUNT_SOLD					INT				NOT NULL,
	PRODUCT_TYPE				VARCHAR(20)		NOT NULL,

	USR_LOG_I					VARCHAR(128)	NOT NULL,
    USR_LOG_U					VARCHAR(128)	NOT NULL,
    DATE_LOG_I					DATETIME2		NOT NULL,
    DATE_LOG_U					DATETIME2		NOT NULL,
    VERSION						INT				NOT NULL,

	CONSTRAINT PK_PRODUCT PRIMARY KEY (PRODUCT_ID),
);

CREATE TABLE shop.PRODUCT_IMAGE
(
    PRODUCT_IMAGE_ID INT          NOT NULL IDENTITY,
    PRODUCT_ID       INT          NOT NULL,
    IMAGE_URL        VARCHAR(255) NOT NULL,
    IS_MAIN_IMG      BIT          NOT NULL,

    USR_LOG_I        VARCHAR(128) NOT NULL,
    USR_LOG_U        VARCHAR(128) NOT NULL,
    DATE_LOG_I       DATETIME2    NOT NULL,
    DATE_LOG_U       DATETIME2    NOT NULL,
    VERSION          INT          NOT NULL,

    CONSTRAINT PK_PRODUCT_IMAGE PRIMARY KEY (PRODUCT_IMAGE_ID),

    CONSTRAINT FK_PRODUCT_IMAGE_PRODUCT
        FOREIGN KEY (PRODUCT_ID) REFERENCES shop.PRODUCT (PRODUCT_ID)
);

CREATE TABLE shop.PRODUCT_CATALOG
(
    PRODUCT_CATALOG_ID INT          NOT NULL IDENTITY,
    PRODUCT_ID         INT          NOT NULL,
    CATALOG_ID         INT          NOT NULL,

    USR_LOG_I          VARCHAR(128) NOT NULL,
    USR_LOG_U          VARCHAR(128) NOT NULL,
    DATE_LOG_I         DATETIME2    NOT NULL,
    DATE_LOG_U         DATETIME2    NOT NULL,
    VERSION            INT          NOT NULL,

    CONSTRAINT PK_PRODUCT_CATALOG PRIMARY KEY (PRODUCT_CATALOG_ID),

    CONSTRAINT FK_PRODUCT_CATALOG_PRODUCT
        FOREIGN KEY (PRODUCT_ID) REFERENCES shop.PRODUCT (PRODUCT_ID),

    CONSTRAINT FK_PRODUCT_CATALOG_CATALOG
        FOREIGN KEY (CATALOG_ID) REFERENCES shop.CATALOG (CATALOG_ID)
);

CREATE TABLE shop.PRODUCT_POINT
(
    PRODUCT_POINT_ID   INT          NOT NULL IDENTITY,
    ENTERPRISE_ID      INT,
    PRODUCT_ID         INT          NOT NULL,
    POINT_EXCHANGE     DECIMAL(17, 2),
    ID_ORIGIN          INT          NOT NULL,
    UPDATE_DESCRIPTION NVARCHAR(4000),
    ACTIVE             BIT          NOT NULL,

    USR_LOG_I          VARCHAR(128) NOT NULL,
    USR_LOG_U          VARCHAR(128) NOT NULL,
    DATE_LOG_I         DATETIME2    NOT NULL,
    DATE_LOG_U         DATETIME2    NOT NULL,
    VERSION            INT          NOT NULL,

    CONSTRAINT PK_PRODUCT_POINT PRIMARY KEY (PRODUCT_POINT_ID),

    CONSTRAINT FK_PRODUCT_POINT_ENTERPRISE
        FOREIGN KEY (ENTERPRISE_ID) REFERENCES shop.ENTERPRISE (ENTERPRISE_ID),

    CONSTRAINT FK_PRODUCT_POINT_PRODUCT
        FOREIGN KEY (PRODUCT_ID) REFERENCES shop.PRODUCT (PRODUCT_ID)
);

CREATE TABLE shop.PURCHASE_ORDER
(
    PURCHASE_ORDER_ID         INT            NOT NULL IDENTITY,
    CUSTOMER_ID               INT            NOT NULL,
    ENTERPRISE_ID             INT            NOT NULL,
    ORDER_TOTAL_POINT_EXHANGE DECIMAL(17, 2) NOT NULL,
    ORDER_STATUS              VARCHAR(20)    NOT NULL,
    ORDER_DATE                DATETIME       NOT NULL,
    DELIVERY_STATUS           VARCHAR(20)    NOT NULL,
    DELIVERY_DATE             DATETIME,
    ORDER_TOTAL_CASH          DECIMAL(17, 2) NOT NULL,

    USR_LOG_I                 VARCHAR(128)   NOT NULL,
    USR_LOG_U                 VARCHAR(128)   NOT NULL,
    DATE_LOG_I                DATETIME2      NOT NULL,
    DATE_LOG_U                DATETIME2      NOT NULL,
    VERSION                   INT            NOT NULL,

    CONSTRAINT PK_PURCHASE_ORDER PRIMARY KEY (PURCHASE_ORDER_ID),

    CONSTRAINT FK_PURCHASE_ORDER_CUSTOMER
        FOREIGN KEY (CUSTOMER_ID) REFERENCES shop.CUSTOMER (CUSTOMER_ID),

    CONSTRAINT FK_PURCHASE_ORDER_ENTERPRISE
        FOREIGN KEY (ENTERPRISE_ID) REFERENCES shop.ENTERPRISE (ENTERPRISE_ID)
);

CREATE TABLE shop.PURCHASE_ORDER_DETAIL
(
    PURCHASE_ORDER_DETAIL_ID INT            NOT NULL IDENTITY,
    PURCHASE_ORDER_ID        INT            NOT NULL,
    PRODUCT_ID               INT            NOT NULL,
    PRODUCT_POINT_ID         INT            NOT NULL,
    POINT_EXCHANGE           DECIMAL(17, 2) NOT NULL,
    AMOUNT                   INT            NOT NULL,
    TOTAL_POINT_EXCHANGE     DECIMAL(17, 2) NOT NULL,
    TOTAL_CASH               DECIMAL(17, 2) NOT NULL,

    USR_LOG_I                VARCHAR(128)   NOT NULL,
    USR_LOG_U                VARCHAR(128)   NOT NULL,
    DATE_LOG_I               DATETIME2      NOT NULL,
    DATE_LOG_U               DATETIME2      NOT NULL,
    VERSION                  INT            NOT NULL,

    CONSTRAINT PK_PURCHASE_ORDER_DETAIL PRIMARY KEY (PURCHASE_ORDER_DETAIL_ID),

    CONSTRAINT FK_PURCHASE_ORDER_DETAIL_PURCHASE_ORDER
        FOREIGN KEY (PURCHASE_ORDER_ID) REFERENCES shop.PURCHASE_ORDER (PURCHASE_ORDER_ID),

    CONSTRAINT FK_PURCHASE_ORDER_DETAIL_PRODUCT
        FOREIGN KEY (PRODUCT_ID) REFERENCES shop.PRODUCT (PRODUCT_ID),

    CONSTRAINT FK_PURCHASE_ORDER_DETAIL_PRODUCT_POINT
        FOREIGN KEY (PRODUCT_POINT_ID) REFERENCES shop.PRODUCT_POINT (PRODUCT_POINT_ID),
);


CREATE TABLE shop.ACCOUNTING
(
    ACCOUNTING_ID    INT            NOT NULL IDENTITY,
    ENTERPRISE_ID    INT            NOT NULL,
    START_DATE       DATE           NOT NULL,
    END_DATE         DATE           NOT NULL,
    TOTAL_INCOME     DECIMAL(17, 2) NOT NULL,
    TOTAL_COMMISSION DECIMAL(17, 2) NOT NULL,
    PAYMENT_STATUS   VARCHAR(20)    NOT NULL,
    PAYMENT_DATE     DATE,
    PAYMENT_METHOD   VARCHAR(20),

    USR_LOG_I        VARCHAR(128)   NOT NULL,
    USR_LOG_U        VARCHAR(128)   NOT NULL,
    DATE_LOG_I       DATETIME2      NOT NULL,
    DATE_LOG_U       DATETIME2      NOT NULL,
    VERSION          INT            NOT NULL,

    CONSTRAINT PK_ACCOUNTTING PRIMARY KEY (ACCOUNTING_ID),

    CONSTRAINT FK_ACCOUNTING_ENTERPRISE
        FOREIGN KEY (ENTERPRISE_ID) REFERENCES shop.ENTERPRISE (ENTERPRISE_ID)
);

CREATE TABLE shop.COOPERATION_CONTRACT
(
    COOPERATION_CONTRACT_ID INT            NOT NULL IDENTITY,
    ENTERPRISE_ID           INT            NOT NULL,
    ACCOUNTING_ID           INT,
    START_DATE              DATE           NOT NULL,
    END_DATE                DATE           NOT NULL,
    COMMISSION_RATE         DECIMAL(17, 2) NOT NULL,
    CASH_PER_POINT          DECIMAL(17, 2) NOT NULL,
    ID_ORIGIN               INT            NOT NULL,
    UPDATE_DESCRIPTION      NVARCHAR(4000),
    CONTRACT_STATUS         VARCHAR(20)    NOT NULL,

    USR_LOG_I               VARCHAR(128)   NOT NULL,
    USR_LOG_U               VARCHAR(128)   NOT NULL,
    DATE_LOG_I              DATETIME2      NOT NULL,
    DATE_LOG_U              DATETIME2      NOT NULL,
    VERSION                 INT            NOT NULL,

    CONSTRAINT PK_COOPERATION_CONTRACT PRIMARY KEY (COOPERATION_CONTRACT_ID),

    CONSTRAINT FK_COOPERATION_CONTRACT_ENTERPRISE
        FOREIGN KEY (ENTERPRISE_ID) REFERENCES shop.ENTERPRISE (ENTERPRISE_ID),

    CONSTRAINT FK_COOPERATION_CONTRACT_ACCOUNTING
        FOREIGN KEY (ACCOUNTING_ID) REFERENCES shop.ACCOUNTING (ACCOUNTING_ID)
);

CREATE TABLE shop.PRODUCT_CART
(
    PRODUCT_CART_ID  INT          NOT NULL IDENTITY,
    CUSTOMER_ID      INT          NOT NULL,
    PRODUCT_POINT_ID INT          NOT NULL,
    AMOUNT           INT          NOT NULL,

    USR_LOG_I        VARCHAR(128) NOT NULL,
    USR_LOG_U        VARCHAR(128) NOT NULL,
    DATE_LOG_I       DATETIME2    NOT NULL,
    DATE_LOG_U       DATETIME2    NOT NULL,
    VERSION          INT          NOT NULL,

    CONSTRAINT PK_PRODUCT_CART PRIMARY KEY (PRODUCT_CART_ID),

    CONSTRAINT FK_PRODUCT_CART_CUSTOMER_ID
        FOREIGN KEY (CUSTOMER_ID) REFERENCES shop.CUSTOMER (CUSTOMER_ID),

    CONSTRAINT FK_PRODUCT_CART_PRODUCT_POINT
        FOREIGN KEY (PRODUCT_POINT_ID) REFERENCES shop.PRODUCT_POINT (PRODUCT_POINT_ID)
);

CREATE TABLE staging.STAG_CUSTOMER
(
    STAG_CUSTOMER_ID      INT          NOT NULL,
    ENTERPRISE_ID         INT          NOT NULL,
    REGISTER_EMAIL        VARCHAR(255) NOT NULL,
    REGISTER_PHONE_NUMBER VARCHAR(255) NOT NULL,
    IMPORT_DATE           DATETIME     NOT NULL,

    USR_LOG_I             VARCHAR(128) NOT NULL,
    USR_LOG_U             VARCHAR(128) NOT NULL,
    DATE_LOG_I            DATETIME2    NOT NULL,
    DATE_LOG_U            DATETIME2    NOT NULL,
    VERSION               INT          NOT NULL,

    CONSTRAINT PK_STAG_CUSTOMER PRIMARY KEY (STAG_CUSTOMER_ID)
)

CREATE TABLE notification.ENTERPRISE_COOPERATION_REQUEST
(
    ENTERPRISE_REGISTER_REQUEST_ID INT           NOT NULL IDENTITY,
    FULLNAME                       VARCHAR(255)  NOT NULL,
    POSITION                       VARCHAR(255)  NOT NULL,
    WORK_EMAIL                     VARCHAR(255)  NOT NULL,
    PHONE_NUMBER                   VARCHAR(20)   NOT NULL,
    ENTERPRISE_ADDRESS             VARCHAR(1000) NOT NULL,
    ENTERPRISE_NAME                VARCHAR(255)  NOT NULL,
    ENTERPRISE_WEBSITE             VARCHAR(255)  NOT NULL,
    REGISTER_REQUEST_STATUS        VARCHAR(255)  NOT NULL,
    REGISTER_DATE                  DATETIME2     NOT NULL,
    VERIFICATION_DATE              DATETIME2,
    TEMP_PASSWORD_GENERATE         VARCHAR(255),
    ENTERPRISE_ID                  INT,

    USR_LOG_I                      VARCHAR(128)  NOT NULL,
    USR_LOG_U                      VARCHAR(128)  NOT NULL,
    DATE_LOG_I                     DATETIME2     NOT NULL,
    DATE_LOG_U                     DATETIME2     NOT NULL,
    VERSION                        INT           NOT NULL,
)